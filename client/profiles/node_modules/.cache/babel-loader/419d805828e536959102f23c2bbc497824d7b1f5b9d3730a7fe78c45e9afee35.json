{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Desktop\\\\dev\\\\fullStack\\\\trainig\\\\fullstack\\\\profiles\\\\client\\\\profiles\\\\src\\\\contexts\\\\authContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { register, login, API } from \"../axios/auth\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userData, setUserData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const checkTokenValidity = async () => {\n      const token = localStorage.getItem(\"profilesAuthToken\");\n      if (!token) {\n        console.log(\"No token found, user not logged in.\");\n        setIsLoading(false);\n        return;\n      }\n      try {\n        const decodedToken = jwtDecode(token);\n        const currentTime = Date.now() / 1000;\n        if (decodedToken.exp < currentTime) {\n          console.error(\"Token expired, logging out.\");\n          authContextLogout();\n        } else {\n          const response = await API.post(\"/protected\", {\n            user: decodedToken\n          });\n          setIsLoggedIn(true);\n          setUserData({\n            fullName: response.data.user.fullName,\n            nickName: response.data.user.nickName,\n            _id: response.data.user._id,\n            createdAt: \"2025-01-26T09:07:20.899Z\"\n          });\n          console.log(response.data.user);\n          console.log(\"User authenticated with valid token.\");\n        }\n      } catch (error) {\n        console.error(\"Invalid token, logging out.\", error);\n        authContextLogout();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    checkTokenValidity();\n  }, []);\n  const authContextRegister = async user => {\n    setIsLoading(true);\n    try {\n      const res = await register(user);\n      console.log(\"Registered successfully!\");\n      return res;\n    } catch (error) {\n      console.error(\"Registration failed:\", error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const authContextLogin = async user => {\n    setIsLoading(true);\n    try {\n      const response = await login(user);\n      localStorage.setItem(\"profilesAuthToken\", response.token);\n      setUserData({\n        fullName: response.user.fullName,\n        nickName: response.user.nickName,\n        _id: response.user._id,\n        createdAt: \"2025-01-26T09:07:20.899Z\"\n      });\n      setIsLoggedIn(true);\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const authContextLogout = () => {\n    localStorage.removeItem(\"profilesAuthToken\");\n    setUserData(null);\n    setIsLoggedIn(false);\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      authContextLogin,\n      authContextRegister,\n      authContextLogout,\n      userData,\n      isLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5MEld0S3YOM1PIOyTKHyBwKshmQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","register","login","API","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","userData","setUserData","isLoading","setIsLoading","checkTokenValidity","token","localStorage","getItem","console","log","decodedToken","currentTime","Date","now","exp","error","authContextLogout","response","post","user","fullName","data","nickName","_id","createdAt","authContextRegister","res","authContextLogin","setItem","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/danie/Desktop/dev/fullStack/trainig/fullstack/profiles/client/profiles/src/contexts/authContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport { register, login, API } from \"../axios/auth\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userData, setUserData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const checkTokenValidity = async () => {\r\n      const token = localStorage.getItem(\"profilesAuthToken\");\r\n\r\n      if (!token) {\r\n        console.log(\"No token found, user not logged in.\");\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const decodedToken = jwtDecode(token);\r\n        const currentTime = Date.now() / 1000;\r\n\r\n        if (decodedToken.exp < currentTime) {\r\n          console.error(\"Token expired, logging out.\");\r\n          authContextLogout();\r\n        } else {\r\n          const response = await API.post(\"/protected\", { user: decodedToken });\r\n          setIsLoggedIn(true);\r\n          setUserData({\r\n            fullName: response.data.user.fullName,\r\n            nickName: response.data.user.nickName,\r\n            _id: response.data.user._id,\r\n            createdAt: \"2025-01-26T09:07:20.899Z\",\r\n          });\r\n          console.log(response.data.user);\r\n\r\n          console.log(\"User authenticated with valid token.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Invalid token, logging out.\", error);\r\n        authContextLogout();\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    checkTokenValidity();\r\n  }, []);\r\n\r\n  const authContextRegister = async (user) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await register(user);\r\n      console.log(\"Registered successfully!\");\r\n      return res;\r\n    } catch (error) {\r\n      console.error(\"Registration failed:\", error);\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const authContextLogin = async (user) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await login(user);\r\n      localStorage.setItem(\"profilesAuthToken\", response.token);\r\n      setUserData({\r\n        fullName: response.user.fullName,\r\n        nickName: response.user.nickName,\r\n        _id: response.user._id,\r\n        createdAt: \"2025-01-26T09:07:20.899Z\",\r\n      });\r\n      setIsLoggedIn(true);\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error);\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const authContextLogout = () => {\r\n    localStorage.removeItem(\"profilesAuthToken\");\r\n    setUserData(null);\r\n    setIsLoggedIn(false);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn,\r\n        authContextLogin,\r\n        authContextRegister,\r\n        authContextLogout,\r\n        userData,\r\n        isLoading,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}