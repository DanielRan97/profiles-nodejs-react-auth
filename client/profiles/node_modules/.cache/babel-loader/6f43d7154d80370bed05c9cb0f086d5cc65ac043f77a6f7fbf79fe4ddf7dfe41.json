{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Desktop\\\\dev\\\\fullStack\\\\trainig\\\\fullstack\\\\profiles\\\\client\\\\profiles\\\\src\\\\contexts\\\\authContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { register, login } from \"../axios/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    // Check localStorage for the token on app load\n    const token = localStorage.getItem('profilesAuthToken');\n    setIsLoggedIn(!!token); // Set logged in if token exists\n  }, []);\n  const authContextLogin = token => {\n    localStorage.setItem('profilesAuthToken', token);\n    setIsLoggedIn(true);\n  };\n  const authContextLogout = () => {\n    localStorage.removeItem('profilesAuthToken');\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      authContextLogin,\n      authContextLogout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","register","login","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","token","localStorage","getItem","authContextLogin","setItem","authContextLogout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/danie/Desktop/dev/fullStack/trainig/fullstack/profiles/client/profiles/src/contexts/authContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { register, login } from \"../axios/auth\";\r\n\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  \r\n\r\n  useEffect(() => {\r\n    // Check localStorage for the token on app load\r\n    const token = localStorage.getItem('profilesAuthToken');\r\n    setIsLoggedIn(!!token); // Set logged in if token exists\r\n  }, []);\r\n\r\n  const authContextLogin = (token) => {\r\n    localStorage.setItem('profilesAuthToken', token);\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  const authContextLogout = () => {\r\n    localStorage.removeItem('profilesAuthToken');\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isLoggedIn, authContextLogin, authContextLogout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,QAAQ,EAAEC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAGnDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC;IACvDH,aAAa,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,gBAAgB,GAAIH,KAAK,IAAK;IAClCC,YAAY,CAACG,OAAO,CAAC,mBAAmB,EAAEJ,KAAK,CAAC;IAChDD,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC9BJ,YAAY,CAACK,UAAU,CAAC,mBAAmB,CAAC;IAC5CP,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEV,UAAU;MAAEK,gBAAgB;MAAEE;IAAkB,CAAE;IAAAT,QAAA,EAC9EA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACf,EAAA,CAzBWF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}