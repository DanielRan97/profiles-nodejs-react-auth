{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Desktop\\\\dev\\\\fullStack\\\\trainig\\\\fullstack\\\\profiles\\\\client\\\\profiles\\\\src\\\\components\\\\signUp\\\\signUp.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport classes from \"./signUp.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const [signUpFormState, setSignUpFormState] = useState({\n    fullName: {\n      value: \"\",\n      type: \"text\",\n      name: \"Full Name\",\n      valid: {\n        min: 3,\n        max: 20\n      },\n      error: \"\"\n    },\n    nickName: {\n      value: \"\",\n      type: \"text\",\n      name: \"Nick Name\",\n      valid: {\n        min: 3,\n        max: 20\n      },\n      error: \"\"\n    },\n    password: {\n      value: \"\",\n      type: \"password\",\n      name: \"Password\",\n      valid: {\n        min: 6,\n        max: 20\n      },\n      error: \"\"\n    }\n  });\n\n  // Handle input change and validation\n  const inputHandler = (val, key) => {\n    const {\n      min,\n      max\n    } = signUpFormState[key].valid;\n    const error = val.length < min || val.length > max ? `${signUpFormState[key].name} length must be between ${min} and ${max} characters.` : \"\";\n    setSignUpFormState(prev => ({\n      ...prev,\n      [key]: {\n        ...prev[key],\n        value: val,\n        error: error\n      }\n    }));\n  };\n\n  // Check if the form is valid\n  const isFormValid = () => {\n    return Object.values(signUpFormState).every(field => field.error === \"\" && field.value.trim() !== \"\");\n  };\n  let signUpForm = /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.signUpForm,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SIGN UP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), Object.entries(signUpFormState).map(([key, value]) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.signUpFormInputDiv,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [value.name, /*#__PURE__*/_jsxDEV(\"input\", {\n            className: value.error && classes.inputError,\n            minLength: value.valid.min,\n            maxLength: value.valid.max,\n            type: value.type,\n            value: value.value,\n            onChange: e => inputHandler(e.target.value, key)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), value.error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.signUpFormInputError,\n          children: value.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !isFormValid(),\n      className: classes.signUpFormButton,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: signUpForm\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 10\n  }, this);\n};\n_s(SignUp, \"2MIXU22c8fWNF8Jx+RUufEO0XXg=\");\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["useState","classes","jsxDEV","_jsxDEV","SignUp","_s","signUpFormState","setSignUpFormState","fullName","value","type","name","valid","min","max","error","nickName","password","inputHandler","val","key","length","prev","isFormValid","Object","values","every","field","trim","signUpForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","entries","map","signUpFormInputDiv","inputError","minLength","maxLength","onChange","e","target","signUpFormInputError","disabled","signUpFormButton","_c","$RefreshReg$"],"sources":["C:/Users/danie/Desktop/dev/fullStack/trainig/fullstack/profiles/client/profiles/src/components/signUp/signUp.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport classes from \"./signUp.module.css\";\r\n\r\nconst SignUp = () => {\r\n  const [signUpFormState, setSignUpFormState] = useState({\r\n    fullName: {\r\n      value: \"\",\r\n      type: \"text\",\r\n      name: \"Full Name\",\r\n      valid: {\r\n        min: 3,\r\n        max: 20,\r\n      },\r\n      error: \"\",\r\n    },\r\n    nickName: {\r\n      value: \"\",\r\n      type: \"text\",\r\n      name: \"Nick Name\",\r\n      valid: {\r\n        min: 3,\r\n        max: 20,\r\n      },\r\n      error: \"\",\r\n    },\r\n    password: {\r\n      value: \"\",\r\n      type: \"password\",\r\n      name: \"Password\",\r\n      valid: {\r\n        min: 6,\r\n        max: 20,\r\n      },\r\n      error: \"\",\r\n    },\r\n  });\r\n\r\n  // Handle input change and validation\r\n  const inputHandler = (val, key) => {\r\n    const { min, max } = signUpFormState[key].valid;\r\n\r\n    const error =\r\n      val.length < min || val.length > max\r\n        ? `${signUpFormState[key].name} length must be between ${min} and ${max} characters.`\r\n        : \"\";\r\n\r\n    setSignUpFormState((prev) => ({\r\n      ...prev,\r\n      [key]: {\r\n        ...prev[key],\r\n        value: val,\r\n        error: error,\r\n      },\r\n    }));\r\n  };\r\n\r\n  // Check if the form is valid\r\n  const isFormValid = () => {\r\n    return Object.values(signUpFormState).every((field) => field.error === \"\" && field.value.trim() !== \"\");\r\n  };\r\n\r\n  let signUpForm = (\r\n    <form className={classes.signUpForm}>\r\n      <h1>SIGN UP</h1>\r\n      {Object.entries(signUpFormState).map(([key, value]) => {\r\n        return (\r\n          <div key={key} className={classes.signUpFormInputDiv}>\r\n            <label>\r\n              {value.name}\r\n              <input\r\n                className={value.error && classes.inputError}\r\n                minLength={value.valid.min}\r\n                maxLength={value.valid.max}\r\n                type={value.type}\r\n                value={value.value}\r\n                onChange={(e) => inputHandler(e.target.value, key)}\r\n              />\r\n            </label>\r\n            {value.error && <p className={classes.signUpFormInputError}>{value.error}</p>}\r\n          </div>\r\n        );\r\n      })}\r\n      <button disabled={!isFormValid()} className={classes.signUpFormButton}>\r\n        Sign Up\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return <div>{signUpForm}</div>;\r\n};\r\n\r\nexport default SignUp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}