{"ast":null,"code":"import { jwtDecode } from \"jwt-decode\";\nexport const isLoggedIn = () => {\n  const token = localStorage.getItem(\"profilesAuthToken\");\n  if (!token) return false;\n  try {\n    const decodedToken = jwtDecode(token);\n    const currentTime = Date.now() / 1000;\n    return decodedToken.exp > currentTime;\n  } catch (error) {\n    console.error(\"Invalid token\", error);\n    return false;\n  }\n};","map":{"version":3,"names":["jwtDecode","isLoggedIn","token","localStorage","getItem","decodedToken","currentTime","Date","now","exp","error","console"],"sources":["C:/Users/danie/Desktop/dev/fullStack/trainig/fullstack/profiles/client/profiles/src/utilities/auth/isUserLoggedIn.js"],"sourcesContent":["import {jwtDecode} from \"jwt-decode\";\r\n\r\nexport const isLoggedIn = () => {\r\n  const token = localStorage.getItem(\"profilesAuthToken\");\r\n  if (!token) return false;\r\n\r\n  try {\r\n    const decodedToken = jwtDecode(token);\r\n    const currentTime = Date.now() / 1000;\r\n    return decodedToken.exp > currentTime;\r\n  } catch (error) {\r\n    console.error(\"Invalid token\", error);\r\n    return false;\r\n  }\r\n};"],"mappings":"AAAA,SAAQA,SAAS,QAAO,YAAY;AAEpC,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC9B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC;EACvD,IAAI,CAACF,KAAK,EAAE,OAAO,KAAK;EAExB,IAAI;IACF,MAAMG,YAAY,GAAGL,SAAS,CAACE,KAAK,CAAC;IACrC,MAAMI,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;IACrC,OAAOH,YAAY,CAACI,GAAG,GAAGH,WAAW;EACvC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}