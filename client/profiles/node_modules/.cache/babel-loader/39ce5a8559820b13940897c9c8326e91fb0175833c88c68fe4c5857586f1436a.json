{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Desktop\\\\dev\\\\fullStack\\\\trainig\\\\fullstack\\\\profiles\\\\client\\\\profiles\\\\src\\\\contexts\\\\authContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { register, login } from \"../axios/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userData, setUserDate] = useState({});\n  useEffect(() => {\n    // Check localStorage for the token on app load\n    const token = localStorage.getItem(\"profilesAuthToken\");\n    setIsLoggedIn(!!token); // Set logged in if token exists\n  }, []);\n  const authContextRegister = async user => {\n    setIsLoggedIn(false);\n    try {\n      await register(user);\n      console.log(\"rigisterd!!!\");\n    } catch (error) {\n      setIsLoggedIn(false);\n      throw error;\n    }\n  };\n  const authContextLogin = async user => {\n    setIsLoggedIn(false);\n    try {\n      const res = await login(user);\n      console.log(\"login!!!\");\n      setIsLoggedIn(true);\n      setUserDate(res.user);\n      console.log(res);\n    } catch (error) {\n      setIsLoggedIn(false);\n      throw error;\n    }\n  };\n  const authContextLogout = () => {\n    localStorage.removeItem(\"profilesAuthToken\");\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      authContextLogin,\n      authContextRegister,\n      authContextLogout,\n      userData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"0mUcJKg+LXwTSGhVJcPdtqJejNo=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","register","login","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","userData","setUserDate","token","localStorage","getItem","authContextRegister","user","console","log","error","authContextLogin","res","authContextLogout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/danie/Desktop/dev/fullStack/trainig/fullstack/profiles/client/profiles/src/contexts/authContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport { register, login } from \"../axios/auth\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userData, setUserDate] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Check localStorage for the token on app load\r\n    const token = localStorage.getItem(\"profilesAuthToken\");\r\n    setIsLoggedIn(!!token); // Set logged in if token exists\r\n\r\n  }, []);\r\n\r\n  const authContextRegister = async (user) => {\r\n    setIsLoggedIn(false);\r\n    try {\r\n      await register(user);\r\n      console.log(\"rigisterd!!!\");\r\n    } catch (error) {\r\n      setIsLoggedIn(false);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const authContextLogin = async (user) => {\r\n    setIsLoggedIn(false);\r\n    try {\r\n      const res =await login(user);\r\n      console.log(\"login!!!\");\r\n      setIsLoggedIn(true);\r\n      setUserDate(res.user);\r\n      console.log(res);\r\n      \r\n    } catch (error) {\r\n      setIsLoggedIn(false);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const authContextLogout = () => {\r\n    localStorage.removeItem(\"profilesAuthToken\");\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn,\r\n        authContextLogin,\r\n        authContextRegister,\r\n        authContextLogout,\r\n        userData\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,QAAQ,EAAEC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC;IACvDL,aAAa,CAAC,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC;EAE1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,mBAAmB,GAAG,MAAOC,IAAI,IAAK;IAC1CP,aAAa,CAAC,KAAK,CAAC;IACpB,IAAI;MACF,MAAMT,QAAQ,CAACgB,IAAI,CAAC;MACpBC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdV,aAAa,CAAC,KAAK,CAAC;MACpB,MAAMU,KAAK;IACb;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAOJ,IAAI,IAAK;IACvCP,aAAa,CAAC,KAAK,CAAC;IACpB,IAAI;MACF,MAAMY,GAAG,GAAE,MAAMpB,KAAK,CAACe,IAAI,CAAC;MAC5BC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvBT,aAAa,CAAC,IAAI,CAAC;MACnBE,WAAW,CAACU,GAAG,CAACL,IAAI,CAAC;MACrBC,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;IAElB,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdV,aAAa,CAAC,KAAK,CAAC;MACpB,MAAMU,KAAK;IACb;EACF,CAAC;EAED,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC9BT,YAAY,CAACU,UAAU,CAAC,mBAAmB,CAAC;IAC5Cd,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACoB,QAAQ;IACnBC,KAAK,EAAE;MACLjB,UAAU;MACVY,gBAAgB;MAChBL,mBAAmB;MACnBO,iBAAiB;MACjBZ;IACF,CAAE;IAAAJ,QAAA,EAEDA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtB,EAAA,CAvDWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}