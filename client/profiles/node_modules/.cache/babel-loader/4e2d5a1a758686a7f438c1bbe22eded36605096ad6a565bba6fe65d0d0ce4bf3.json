{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Desktop\\\\dev\\\\fullStack\\\\trainig\\\\fullstack\\\\profiles\\\\client\\\\profiles\\\\src\\\\contexts\\\\authContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { register, login } from \"../axios/auth\";\nimport { API } from \"../axios/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userData, setUserData] = useState(null);\n  useEffect(() => {\n    const checkTokenValidity = async () => {\n      const token = localStorage.getItem(\"profilesAuthToken\");\n      if (token) {\n        try {\n          const response = await API.post(\"/protected\", {});\n          setIsLoggedIn(true);\n          setUserData({\n            fullName: response.data.user.fullName,\n            nickName: response.data.user.nickName\n          });\n        } catch (error) {\n          console.error(\"Invalid token, logging out.\");\n          authContextLogout();\n        }\n      }\n    };\n    checkTokenValidity();\n  }, []);\n  const authContextRegister = async user => {\n    try {\n      await register(user);\n      console.log(\"Registered successfully!\");\n    } catch (error) {\n      throw error;\n    }\n  };\n  const authContextLogin = async user => {\n    try {\n      const response = await login(user);\n      localStorage.setItem(\"profilesAuthToken\", response.token);\n      setUserData({\n        fullName: response.user.fullName,\n        nickName: response.user.nickName\n      });\n      setIsLoggedIn(true);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const authContextLogout = () => {\n    localStorage.removeItem(\"profilesAuthToken\");\n    localStorage.removeItem(\"profilesUserData\");\n    setIsLoggedIn(false);\n    setUserData(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      authContextLogin,\n      authContextRegister,\n      authContextLogout,\n      userData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"I16q87cSJph7GkfKlBEj9Tur3P8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","register","login","API","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","userData","setUserData","checkTokenValidity","token","localStorage","getItem","response","post","fullName","data","user","nickName","error","console","authContextLogout","authContextRegister","log","authContextLogin","setItem","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/danie/Desktop/dev/fullStack/trainig/fullstack/profiles/client/profiles/src/contexts/authContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport { register, login } from \"../axios/auth\";\r\nimport {API} from \"../axios/auth\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userData, setUserData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const checkTokenValidity = async () => {\r\n      const token = localStorage.getItem(\"profilesAuthToken\");\r\n      if (token) {\r\n        try {\r\n          const response = await API.post(\"/protected\", {});\r\n          setIsLoggedIn(true);\r\n          setUserData({\r\n            fullName: response.data.user.fullName,\r\n            nickName: response.data.user.nickName,\r\n          });\r\n        } catch (error) {\r\n          console.error(\"Invalid token, logging out.\");\r\n          authContextLogout();\r\n        }\r\n      }\r\n    };\r\n\r\n    checkTokenValidity();\r\n  }, []);\r\n\r\n  const authContextRegister = async (user) => {\r\n    try {\r\n      await register(user);\r\n      console.log(\"Registered successfully!\");\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const authContextLogin = async (user) => {\r\n    try {\r\n      const response = await login(user);\r\n      localStorage.setItem(\"profilesAuthToken\", response.token);\r\n      setUserData({\r\n        fullName: response.user.fullName,\r\n        nickName: response.user.nickName,\r\n      });\r\n      setIsLoggedIn(true);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const authContextLogout = () => {\r\n    localStorage.removeItem(\"profilesAuthToken\");\r\n    localStorage.removeItem(\"profilesUserData\");\r\n    setIsLoggedIn(false);\r\n    setUserData(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn,\r\n        authContextLogin,\r\n        authContextRegister,\r\n        authContextLogout,\r\n        userData,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,QAAQ,EAAEC,KAAK,QAAQ,eAAe;AAC/C,SAAQC,GAAG,QAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,OAAO,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMc,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC;MACvD,IAAIF,KAAK,EAAE;QACT,IAAI;UACF,MAAMG,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;UACjDR,aAAa,CAAC,IAAI,CAAC;UACnBE,WAAW,CAAC;YACVO,QAAQ,EAAEF,QAAQ,CAACG,IAAI,CAACC,IAAI,CAACF,QAAQ;YACrCG,QAAQ,EAAEL,QAAQ,CAACG,IAAI,CAACC,IAAI,CAACC;UAC/B,CAAC,CAAC;QACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAC;UAC5CE,iBAAiB,CAAC,CAAC;QACrB;MACF;IACF,CAAC;IAEDZ,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,mBAAmB,GAAG,MAAOL,IAAI,IAAK;IAC1C,IAAI;MACF,MAAMrB,QAAQ,CAACqB,IAAI,CAAC;MACpBG,OAAO,CAACG,GAAG,CAAC,0BAA0B,CAAC;IACzC,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMK,gBAAgB,GAAG,MAAOP,IAAI,IAAK;IACvC,IAAI;MACF,MAAMJ,QAAQ,GAAG,MAAMhB,KAAK,CAACoB,IAAI,CAAC;MAClCN,YAAY,CAACc,OAAO,CAAC,mBAAmB,EAAEZ,QAAQ,CAACH,KAAK,CAAC;MACzDF,WAAW,CAAC;QACVO,QAAQ,EAAEF,QAAQ,CAACI,IAAI,CAACF,QAAQ;QAChCG,QAAQ,EAAEL,QAAQ,CAACI,IAAI,CAACC;MAC1B,CAAC,CAAC;MACFZ,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC9BV,YAAY,CAACe,UAAU,CAAC,mBAAmB,CAAC;IAC5Cf,YAAY,CAACe,UAAU,CAAC,kBAAkB,CAAC;IAC3CpB,aAAa,CAAC,KAAK,CAAC;IACpBE,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IACnBC,KAAK,EAAE;MACLvB,UAAU;MACVmB,gBAAgB;MAChBF,mBAAmB;MACnBD,iBAAiB;MACjBd;IACF,CAAE;IAAAJ,QAAA,EAEDA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC5B,EAAA,CApEWF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}